using Domain.Entities;
using TCE.Base.Services;
using System.Threading.Tasks;
{{ if is_server_side }}using TCE.Base.Repository._BaseRepository.Paging;{{ else }}using System.Collections.Generic;{{ end }}
{{ if table_columns_filter_list && table_columns_filter_list.size > 0 }}using Domain.Filter;{{ end }}

namespace Services;

public interface I{{ entity_name }}Service : IService<{{ entity_name }}>
{
    public Task<{{ if is_server_side }}IPaginate<{{ entity_name }}>{{ else }}IEnumerable<{{ entity_name }}>{{ end }}> GetAllAsync({{ if table_columns_filter_list && table_columns_filter_list.size > 0 }}{{ entity_name }}Filter filter{{ end }});
    public Task<{{ entity_name }}> GetByIdAsync(int id);
    public {{ entity_name }} Add({{ entity_name }} {{ entity_name | string.slice(0, 1) | string.downcase }}{{ entity_name | string.slice(1) }});
    public {{ entity_name }} Update({{ entity_name }} {{ entity_name | string.slice(0, 1) | string.downcase }}{{ entity_name | string.slice(1) }});
}